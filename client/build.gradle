plugins {
  id("java")
  id("application")
  id("io.freefair.lombok") version "$lombokVersion"
  id("org.openjfx.javafxplugin") version "$javaFxPluginVersion"
  id("org.beryx.jlink") version "$beryxVersion"
}

group 'me.datafox.noterganizer'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
  maven {
    url "https://sandec.jfrog.io/artifactory/repo"
  }
}

sourceCompatibility = '17'
targetCompatibility = '17'

application {
  mainModule = 'noterganizer.client'
  mainClass = 'me.datafox.noterganizer.client.NoterganizerClient'
}

javafx {
  version = "$javaFxVersion"
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  implementation project(":api")
  implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
  implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
  implementation "com.google.code.gson:gson:$gsonVersion"
  implementation "io.github.classgraph:classgraph:$classgraphVersion"
  implementation "com.sandec:mdfx:$mdfxVersion"
}

jlink {
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

  //log4j Java Modularity bullshit workaround
  mergedModule {
    additive = true
    uses 'org.apache.logging.log4j.util.PropertySource';
    uses 'org.apache.logging.log4j.core.util.ContextDataProvider';
    uses 'org.apache.logging.log4j.core.util.WatchEventService';
    uses 'org.apache.logging.log4j.spi.Provider';
    uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory';
  }

  forceMerge('log4j-api')

  jpackage {
    imageName = 'Noterganizer'
    jvmArgs = ['-Djdk.gtk.version=2']
  }
}